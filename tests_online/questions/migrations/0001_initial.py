# Generated by Django 2.2 on 2019-04-30 15:06

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import questions.models.test


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=-1, verbose_name='Position')),
                ('text', models.TextField(verbose_name='Text')),
                ('params_value', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), null=True, size=None, verbose_name='Parameters')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(db_index=True, default=questions.models.test.unique_hash, max_length=64, unique=True, verbose_name='Hash')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_private', models.BooleanField(default=False, verbose_name='Is private?')),
                ('params', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), default=questions.models.test._params__default, size=None, verbose_name='Parameters')),
                ('params_defaults', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=questions.models.test._params_defaults__default, size=None, verbose_name='Parameters default values')),
                ('stats_restriction', models.CharField(choices=[('off', 'Off'), ('any', 'Any'), ('auth_only', 'Authorized only'), ('private', 'Private')], default='off', max_length=16, verbose_name='Statistic restriction')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Test',
                'verbose_name_plural': 'Tests',
            },
        ),
        migrations.CreateModel(
            name='UserAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choices', models.ManyToManyField(to='questions.Answer', verbose_name='Answers')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.Test', verbose_name='Test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User answers',
                'verbose_name_plural': 'Users answers',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(default=-1, verbose_name='Position')),
                ('text', models.TextField(verbose_name='Text')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.Test', verbose_name='Test')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.Question', verbose_name='Question'),
        ),
    ]
